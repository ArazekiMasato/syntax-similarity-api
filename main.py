# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A6levq2ebQDEa_WApaxQTyAEHl5DViLi
"""

from fastapi import FastAPI
from pydantic import BaseModel
import spacy
from pyngrok import ngrok, conf
import nest_asyncio
import uvicorn
import difflib

# ngrokの認証トークン設定（自分のものを入れる）
conf.get_default().auth_token = "2iAaU0FzwsYnER0IJNvNFE7MWfU_7zQGokzSSBGs675aZJPEr"

# 非同期処理の衝突回避
nest_asyncio.apply()

app = FastAPI()

nlp = spacy.load("en_core_web_sm")

class Texts(BaseModel):
    text1: str
    text2: str

def extract_dependency_labels(text):
    doc = nlp(text)
    return [token.dep_ for token in doc]

def compute_syntax_similarity(text1, text2):
    deps1 = extract_dependency_labels(text1)
    deps2 = extract_dependency_labels(text2)
    matcher = difflib.SequenceMatcher(None, deps1, deps2)
    score = matcher.ratio()
    return score

@app.post("/syntax_similarity")
def syntax_similarity(data: Texts):
    score = compute_syntax_similarity(data.text1, data.text2)
    return {"syntax_similarity_score": round(score, 4)}

# 既存のngrokトンネルをすべて停止
ngrok.kill()

# 新しいトンネル作成
public_url = ngrok.connect(8000)
print("外部アクセス用URL:", public_url)

uvicorn.run(app, host="0.0.0.0", port=8000)